LinkLuaModifier("modifier_courier_gold_sec_1", "abilities/builder/courier_gold_sec_1.lua", LUA_MODIFIER_MOTION_NONE)

if ( courier_gold_sec_1 == null ) {
	courier_gold_sec_1 = class({})
}
 OnUpgrade() {
	if ( this.GetLevel() > 0 ) {
		let hCaster = this.GetCasterPlus()
		this.StartCooldown(this.GetSpecialValueFor("interval"))
		hCaster.AddNewModifier(hCaster, this, "modifier_courier_gold_sec_1", null)
	}
}
// // // // // // // // // // // // // // // // // // // -modifier_courier_gold_sec_1// // // // // // // // // // // // // // // // // // // -
// -@class modifier_courier_gold_sec_1.eom_modifier
@registerModifier()
export class modifier_courier_gold_sec_1 extends BaseModifier_Plus {
 IsHidden() {
	return true
}
 IsPurgable() {
	return false
}
 IsPurgeException() {
	return false
}
 OnCreated(params: ModifierTable) {
	this.interval = this.GetSpecialValueFor("interval")
	this.gold_sec_min = this.GetSpecialValueFor("gold_sec_min")
	this.gold_sec_max = this.GetSpecialValueFor("gold_sec_max")
	if ( IsServer() ) {
		this.StartIntervalThink(this.interval)
	}
}
 OnRefresh(params: ModifierTable) {
	this.interval = this.GetSpecialValueFor("interval")
	this.gold_sec_min = this.GetSpecialValueFor("gold_sec_min")
	this.gold_sec_max = this.GetSpecialValueFor("gold_sec_max")
	if ( IsServer() ) {
		this.StartIntervalThink(this.interval)
	}
}
 OnIntervalThink() {
	let hParent = this.GetParentPlus()
	let hAbility = this.GetAbilityPlus()
	if ( !GameFunc.IsValid(hAbility) ) {
		this.Destroy()
		return
	}
	if ( Rounds.IsEndlessRound() ) {
		this.StartIntervalThink(-1)
		return
	}
	let iPlayerID = hParent.GetPlayerOwnerID()
	let random = RandomInt(this.gold_sec_min, this.gold_sec_max)
	PlayerData.ModifyGold(iPlayerID, random, true)
	hAbility.StartCooldown(this.interval)
	SendOverheadEventMessage(hParent.GetPlayerOwner(), DOTA_OVERHEAD_ALERT.OVERHEAD_ALERT_GOLD, hParent, random, null)
}