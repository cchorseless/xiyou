if ( TPCommon == null ) {
	// - @class TPCommon
	TPCommon = {}
}
 CastFilterResultLocation(vLocation) {
	let hCaster = this.GetCasterPlus()
	if ( GameFunc.IsValid(hCaster) ) {
		if ( IsServer() ) {
			if ( !this.ValidPosition(vLocation) ) {
				this.error = "dota_hud_error_cant_build_at_location"
				return UF_FAIL_CUSTOM
			}
		}
		return  UnitFilterResult.UF_SUCCESS
	}
	this.error = "dota_hud_error_only_building_can_use"
	return UF_FAIL_CUSTOM
}
 ValidPosition(vPosition) {
	let hCaster = this.GetCasterPlus()
	let sUnique = null
	if ( hCaster.GetBuilding ) {
		let hBuilding = hCaster.GetBuilding()
		if ( hBuilding ) {
			sUnique = hBuilding.GetBlockerEntity()
		}
	}
	SnapToGrid(BUILDING_SIZE, vPosition)
	if ( !BuildSystem.ValidPosition(BUILDING_SIZE, vPosition, sUnique) ) {
		return false
	}
	return true
}
 OnSpellStart() {
	let hCaster = this.GetCasterPlus()
	let vPosition = this.GetCursorPosition()
	if ( !this.ValidPosition(vPosition) ) {
		return false
	}

	CreateModifierThinker(hCaster, this, "modifier_tp_thinker", { duration = this.GetTPDuration() }, vPosition, hCaster.GetTeamNumber(), false)

	return true
}
 GetTPDuration() {
	return 1
}
 ShowGrid() {
	return 1
}

// -@class TPCommon_Ability : TPCommon
if ( TPCommon_Ability == null ) {
	TPCommon_Ability = class({})
}
for (let v of ( TPCommon)) {
	 

	TPCommon_Ability[k] = v
}

// -@class TPCommon_Item : TPCommon
if ( TPCommon_Item == null ) {
	TPCommon_Item = class({})
}
for (let v of ( TPCommon)) {
	 

	TPCommon_Item[k] = v
}