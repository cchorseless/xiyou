if TPCommon == nil then
	--- @class TPCommon
	TPCommon = {}
end
function TPCommon:CastFilterResultLocation(vLocation)
	local hCaster = self:GetCaster()
	if IsValid(hCaster) then
		if IsServer() then
			if not self:ValidPosition(vLocation) then
				self.error = "dota_hud_error_cant_build_at_location"
				return UF_FAIL_CUSTOM
			end
		end
		return UF_SUCCESS
	end
	self.error = "dota_hud_error_only_building_can_use"
	return UF_FAIL_CUSTOM
end
function TPCommon:ValidPosition(vPosition)
	local hCaster = self:GetCaster()
	local sUnique = nil
	if hCaster.GetBuilding then
		local hBuilding = hCaster:GetBuilding()
		if hBuilding then
			sUnique = hBuilding:GetBlockerEntity()
		end
	end
	SnapToGrid(BUILDING_SIZE, vPosition)
	if not BuildSystem:ValidPosition(BUILDING_SIZE, vPosition, sUnique) then
		return false
	end
	return true
end
function TPCommon:OnSpellStart()
	local hCaster = self:GetCaster()
	local vPosition = self:GetCursorPosition()
	if not self:ValidPosition(vPosition) then
		return false
	end

	CreateModifierThinker(hCaster, self, "modifier_tp_thinker", { duration = self:GetTPDuration() }, vPosition, hCaster:GetTeamNumber(), false)

	return true
end
function TPCommon:GetTPDuration()
	return 1
end
function TPCommon:ShowGrid()
	return 1
end

---@class TPCommon_Ability : TPCommon
if TPCommon_Ability == nil then
	TPCommon_Ability = class({})
end
for k, v in pairs(TPCommon) do
	TPCommon_Ability[k] = v
end

---@class TPCommon_Item : TPCommon
if TPCommon_Item == nil then
	TPCommon_Item = class({})
end
for k, v in pairs(TPCommon) do
	TPCommon_Item[k] = v
end