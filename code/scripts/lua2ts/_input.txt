LinkLuaModifier("modifier_courier_gold_sec_1", "abilities/builder/courier_gold_sec_1.lua", LUA_MODIFIER_MOTION_NONE)

if courier_gold_sec_1 == nil then
	courier_gold_sec_1 = class({})
end
function courier_gold_sec_1:OnUpgrade()
	if self:GetLevel() > 0 then
		local hCaster = self:GetCaster()
		self:StartCooldown(self:GetSpecialValueFor("interval"))
		hCaster:AddNewModifier(hCaster, self, "modifier_courier_gold_sec_1", nil)
	end
end
---------------------------------------modifier_courier_gold_sec_1---------------------------------------
---@class modifier_courier_gold_sec_1:eom_modifier
modifier_courier_gold_sec_1 = eom_modifier({})
function modifier_courier_gold_sec_1:IsHidden()
	return true
end
function modifier_courier_gold_sec_1:IsPurgable()
	return false
end
function modifier_courier_gold_sec_1:IsPurgeException()
	return false
end
function modifier_courier_gold_sec_1:OnCreated(params)
	self.interval = self:GetAbilitySpecialValueFor("interval")
	self.gold_sec_min = self:GetAbilitySpecialValueFor("gold_sec_min")
	self.gold_sec_max = self:GetAbilitySpecialValueFor("gold_sec_max")
	if IsServer() then
		self:StartIntervalThink(self.interval)
	end
end
function modifier_courier_gold_sec_1:OnRefresh(params)
	self.interval = self:GetAbilitySpecialValueFor("interval")
	self.gold_sec_min = self:GetAbilitySpecialValueFor("gold_sec_min")
	self.gold_sec_max = self:GetAbilitySpecialValueFor("gold_sec_max")
	if IsServer() then
		self:StartIntervalThink(self.interval)
	end
end
function modifier_courier_gold_sec_1:OnIntervalThink()
	local hParent = self:GetParent()
	local hAbility = self:GetAbility()
	if not IsValid(hAbility) then
		self:Destroy()
		return
	end
	if Rounds:IsEndlessRound() then
		self:StartIntervalThink(-1)
		return
	end
	local iPlayerID = hParent:GetPlayerOwnerID()
	local random = RandomInt(self.gold_sec_min, self.gold_sec_max)
	PlayerData:ModifyGold(iPlayerID, random, true)
	hAbility:StartCooldown(self.interval)
	SendOverheadEventMessage(hParent:GetPlayerOwner(), OVERHEAD_ALERT_GOLD, hParent, random, nil)
end