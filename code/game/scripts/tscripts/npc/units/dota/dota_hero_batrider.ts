
import { PrecacheHelper } from "../../../helper/PrecacheHelper";
import { BaseNpc_Plus } from "../../entityPlus/BaseNpc_Plus";
import { registerUnit } from "../../entityPlus/Base_Plus";

/** dota原英雄数据 */
export const Data_dota_hero_batrider = { "Model": "models/heroes/batrider/batrider.vmdl", "IdleExpression": "scenes/batrider/batrider_exp_idle_01.vcd", "SoundSet": "Hero_Batrider", "Enabled": "1", "HeroUnlockOrder": "3", "Role": "Initiator,Jungler,Disabler,Escape", "Rolelevels": "3,2,2,1", "Complexity": "2", "Team": "Bad", "HeroID": "65", "HeroOrderID": "56", "ModelScale": "0.740000", "VersusScale": "0.60000", "SpectatorLoadoutScale": "0.74", "HeroGlowColor": "107 74 53", "CMEnabled": "1", "PickSound": "batrider_bat_spawn_01", "BanSound": "batrider_bat_anger_02", "NameAliases": "br", "workshop_guide_name": "Batrider", "new_player_enable": "1", "SimilarHeroes": "20,19,123", "LastHitChallengeRival": "npc_dota_hero_lina", "HeroSelectSoundEffect": "Hero_Batrider.Pick", "GibType": "default", "Ability1": "batrider_sticky_napalm", "Ability2": "batrider_flamebreak", "Ability3": "batrider_firefly", "Ability4": "generic_hidden", "Ability5": "generic_hidden", "Ability6": "batrider_flaming_lasso", "Ability10": "special_bonus_spell_amplify_5", "Ability11": "special_bonus_armor_6", "Ability12": "special_bonus_unique_batrider_4", "Ability13": "special_bonus_hp_250", "Ability14": "special_bonus_magic_resistance_20", "Ability15": "special_bonus_movement_speed_30", "Ability16": "special_bonus_unique_batrider_1", "Ability17": "special_bonus_unique_batrider_6", "ArmorPhysical": "1", "AttackCapabilities": "DOTA_UNIT_CAP_RANGED_ATTACK", "AttackDamageMin": "19", "AttackDamageMax": "23", "AttackRate": "1.700000", "AttackAnimationPoint": "0.300000", "AttackAcquisitionRange": "800", "AttackRange": "400", "ProjectileModel": "particles/units/heroes/hero_batrider/batrider_base_attack.vpcf", "ProjectileSpeed": "900", "AttributePrimary": "DOTA_ATTRIBUTE_INTELLECT", "AttributeBaseStrength": "28", "AttributeStrengthGain": "2.900000", "AttributeBaseAgility": "15", "AttributeAgilityGain": "1.8", "AttributeBaseIntelligence": "22", "AttributeIntelligenceGain": "2.900000", "StatusHealthRegen": "1.75", "MovementSpeed": "300", "MovementTurnRate": "0.900000", "VisionDaytimeRange": "1200", "ItemSlots": { "0": { "SlotIndex": "0", "SlotName": "weapon", "SlotText": "#LoadoutSlot_Weapon", "DisplayInLoadout": "0" }, "1": { "SlotIndex": "1", "SlotName": "head", "SlotText": "#LoadoutSlot_Head_Accessory", "TextureWidth": "512", "TextureHeight": "512", "MaxPolygonsLOD0": "3000", "MaxPolygonsLOD1": "1200" }, "2": { "SlotIndex": "2", "SlotName": "shoulder", "SlotText": "#LoadoutSlot_Shoulder", "TextureWidth": "512", "TextureHeight": "512", "MaxPolygonsLOD0": "2500", "MaxPolygonsLOD1": "1000" }, "3": { "SlotIndex": "3", "SlotName": "belt", "SlotText": "#LoadoutSlot_Belt", "TextureWidth": "256", "TextureHeight": "256", "MaxPolygonsLOD0": "1500", "MaxPolygonsLOD1": "600" }, "4": { "SlotIndex": "4", "SlotName": "mount", "SlotText": "#LoadoutSlot_Mount", "TextureWidth": "512", "TextureHeight": "512", "MaxPolygonsLOD0": "6000", "MaxPolygonsLOD1": "2400" }, "5": { "SlotIndex": "5", "SlotName": "taunt", "SlotText": "#LoadoutSlot_Taunt" } }, "particle_folder": "particles/units/heroes/hero_batrider", "GameSoundsFile": "soundevents/game_sounds_heroes/game_sounds_batrider.vsndevts", "VoiceFile": "soundevents/voscripts/game_sounds_vo_batrider.vsndevts", "RenderablePortrait": { "Particles": { "particles/units/heroes/hero_batrider/batrider_loadout.vpcf": "loadout" } }, "Bot": { "HeroType": "DOTA_BOT_GANKER | DOTA_BOT_STUN_SUPPORT", "LaningInfo": { "SoloDesire": "2", "RequiresBabysit": "0", "ProvidesBabysit": "2", "SurvivalRating": "1", "RequiresFarm": "1", "ProvidesSetup": "2", "RequiresSetup": "0" } } };

@registerUnit()
export class dota_hero_batrider extends BaseNpc_Plus {
    Spawn(entityKeyValues: CScriptKeyValues) {
        // PrecacheHelper.precachResByKV(entityKeyValues);
        this.__IN_DOTA_NAME__ = "npc_dota_hero_batrider";
        this.__IN_DOTA_DATA__ = Data_dota_hero_batrider;
    }
}

